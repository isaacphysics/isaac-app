// Hex Filter
#hexfilter
{
    height: 450px;
    position: relative;
    >h3
    {
        margin-bottom: 20px;
    }
}

@each $name in (algebra, calculus, circuits, fields, functions, geometry, maths, mechanics)
{
    .ru-hex-filter-back-#{$name}
    {
        background-image: url(/assets/ISAAC-symbol-bg-#{$name}.png);
        background-size: 54px 54px;
        background-repeat: no-repeat;
        background-position: 10px 13px;
    }
}


#hexfilter-text
{
    width: 550px;
    height: 400px;
    position: absolute;
    z-index: 1;
    pointer-events: none;
}

#hexfilter-text .ru-hex-filter-item
{
    position: absolute;
    display: table;
    &.hide
    {
        display: none;
    }
    &.enabled
    {
        color: white !important;
    }
    .ru-hex-filter-circle
    {
        color: white;
        position: absolute;
        display: table;
        right: -17.5px;
        top: 0px;
        background-image: url(/assets/hex-percent-green.png);
        width: 35px;
        height: 35px;
        background-repeat: no-repeat;
        &.ru-hex-filter-circle-hundred
        {
            background-image: url(/assets/hex-percent-tick.png);
        }
        &.ru-hex-filter-circle-zero
        {
            background-image: url(/assets/hex-percent-grey.png);
        }
        div
        {
            display: table-cell;
            vertical-align: middle;
            p
            {
                padding: 0;
                margin: 0;
                font-size: 0.8rem !important;
                font-weight: 600 !important;
                text-align: center;
                width: 35px;
                display: inline-block;
            }
        }
    }
}

#hexfilter-text .ru-hex-filter-item .ru-hex-filter-name
{
    display: table-cell;
    vertical-align: middle;
    p
    {
        display: inline-block;
        text-align: center;
        width: 72px;
        padding: 0;
        margin: 0;
        line-height: 1;
        font-size: 0.8rem !important;
        font-weight: 600 !important;
    }
    &.ru-hex-filter-name-small p
    {
        font-size: 0.6rem !important;
    }
}

#hexfilter-text .ru-hex-filter-item
{
    &.inactive
    {
        color: #cecece;
    }
    .ru-hex-filter-name p.ru-hex-filter-inactive-text
    {
        font-size: 0.6rem !important;
    }
}

#hexfilter-svg
{
    width: 550px;
    height: 400px;
    position: absolute;
    z-index: 0;

}

#hexfilter-svg circle
{
    &.physics
    {
        fill: $ru_physics;
        stroke: $ru_physics;
    }
    &.maths
    {
        fill: $ru_maths;
        stroke: $ru_maths;
    }
    &.grey
    {
        fill: #d9d9d9;
        stroke: #d9d9d9;
    }
}

#hexfilter-svg path
{
    transition: 0.3s;
    cursor: pointer;
    &.physics.enabled
    {
        fill: $ru_physics;
        stroke: $ru_physics;
        &:hover
        {
            fill: lighten($ru_physics, $ru_site_hover);
            stroke: lighten($ru_physics, $ru_site_hover);
        }
    }
    &.maths.enabled
    {
        fill: $ru_maths;
        stroke: $ru_maths;
        &:hover
        {
            fill: lighten($ru_maths, $ru_site_hover);
            stroke: lighten($ru_maths, $ru_site_hover);
        }
    }
    &.disabled
    {
        fill: white;
        stroke: #9d9d9d;
        stroke-width: 1px;
        stroke-linejoin: miter;
        &:hover
        {
            fill: #ededed;
        }
    }
    &.inactive
    {
        cursor: default;
        opacity: 0.5;
        transition: 0.3s;
        &:hover
        {
            transition: 0.3s;
            fill: white;
        }
    }
    &:hide
    {
        visibility: hidden;
    }
}

@media #{$medium-only}
{
    #hexfilter-text, #hexfilter-svg
    {
        width: 260px;
        height: 660px;
    }
    #hexfilter
    {
        height: 700px;
    }
    #hexfilter-text .ru-hex-filter-item
    {
        .ru-hex-filter-circle
        {
            right: -14px;
            top: -2px;
        }
    }
}

@media #{$small-only}
{
    #hexfilter-text, #hexfilter-svg
    {
        width: 260px;
        height: 660px;
    }
    #hexfilter
    {
        height: 700px;
    }
    #hexfilter-text .ru-hex-filter-item
    {
        .ru-hex-filter-circle
        {
            right: -14px;
        }
    }
}

// Difficulty
#difficulty
{
    height: 200px;
}

.difficulty-explanation
{

    div
    {
        margin-top: 10px;
        font-size: 0.9rem;
    }
}

.ru-diff-hex
{
    pointer-events: none;
    position: relatlive;
    div
    {
        position: absolute;
        top: 30px;
        left: 30px;
        font-weight: 600;
    }
}

#difficulty-hexagons
{
    margin: 0 auto 20px auto;
    width: 240px;
    height: auto;
    position: relative;
}



.diff-hex-selected
{
    fill: $ru_green;
    stroke: $ru_green;
    stroke-linejoin: miter;
    color: white;
    cursor: pointer;
    transition: 0.3s;
    &:hover
    {
        fill: lighten($ru_green, $ru_site_hover);
        stroke: lighten($ru_green, $ru_site_hover);
    }
}

.diff-hex-unselected, .diff-hex-disabled
{
    fill: white;
    stroke: #9d9d9d;
    stroke-width: 1px;
    stroke-linejoin: miter;
    cursor: pointer;
    transition: 0.3s;
    &:hover
    {
        transition: 0.3s;
        fill: #ededed;
    }
}

.diff-hex-disabled
{
    cursor: default;
    opacity: 0.5;
    transition: 0.3s;
    color: #cecece;
    &:hover
    {
        transition: 0.3s;
        fill: white;
    }
}

#difficulty-hexagons>div
{
    outline: none;
    &:focus
    {
        .diff-hex-selected
        {
            fill: lighten($ru_green, $ru_site_hover);
            stroke: lighten($ru_green, $ru_site_hover);
        }
        .diff-hex-unselected, .diff-hex-disabled
        {
            fill: #ededed;
        }
        .diff-hex-disabled
        {
            fill: white;
        }
    }
}

$hex_diff_levels : 6;

@for $i from 1 through $hex_diff_levels
{
    $bg_list : ();
    $pos_list : ();
    @for $j from 1 through $hex_diff_levels
    {
        $pos_list : append($pos_list, ($j - 1) * 100% / $hex_diff_levels );
        @if $i > ($hex_diff_levels - $j) { $bg_list : append($bg_list, url('/assets/hex-filter-yellow.png')); }
        @if $i <= ($hex_diff_levels - $j) { $bg_list : append($bg_list, url('/assets/hex-filter-grey.png')); }
    }
    .ru-diff-hex-level-#{$i}:after
    {
        content:'';
        display: inline-block;
        position: relative;
        width: 5px;
        height: 7px * $hex_diff_levels;
        background-repeat: no-repeat;
        background-image: nth($bg_list, 1), nth($bg_list, 2), nth($bg_list, 3), nth($bg_list, 4), nth($bg_list, 5), nth($bg_list, 6);
        background-position: left nth($pos_list, 1), left nth($pos_list, 2), left nth($pos_list, 3), left nth($pos_list, 4), left nth($pos_list, 5), left nth($pos_list, 6);
        top: -10px;
        left: 28px;
    }

}


// Concept Index
#conceptfilter
{
    min-height: 250px;
    position: relative;
}

#concept-input
{
    padding-left: 32px;
    background-image: url(/assets/isaac-filter-search.png);
    background-repeat: no-repeat;
    background-position: 2px 50%;
    margin-top: 8px;
}

#concept-search-data
{
    position: absolute;
    overflow: visible;
    background: white;
    border-left: 1px solid $ru_lightgrey;
    border-right: 1px solid $ru_lightgrey;
    z-index: 20;
    top: 75px;
}

#concept-search-data .concept-search-result
{
    position: relative;
    background: white;
    padding: 10px 8px;
    &:last-child
    {
        border-bottom: 1px solid $ru_lightgrey;
    }
    &:hover
    {
        background: #f3f3f3;
    }
    &.physics:after
    {
        position: absolute;
        content: url(/assets/physics-plus.png);
        right: 8px;
        top: 8px;
    }
    &.maths:after
    {
        position: absolute;
        content: url(/assets/maths-plus.png);
        right: 8px;
        top: 8px;
    }
    cursor: pointer;
}

#concept-search-data .concept-search-result div
{
    width: 80%;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

#concept-results .concept-search-result
{
    position: relative;
    div
    {
        width: 80%;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }
    &.physics
    {
        background-color: $ru_physics;
        &:hover
        {
            background-color: lighten($ru_physics, $ru_site_hover);
        }
    }
    &.maths
    {
        background-color: $ru_maths;
        &:hover
        {
            background-color: lighten($ru_maths, $ru_site_hover);
        }
    }
    &:after
    {
        position: absolute;
        content: url(/assets/isaac-filter-remove.png);
        right: 8px;
        top: 7px;
    }
    margin-top: 4px;
    padding: 10px 12px 10px 12px;
    color: white;
    cursor: pointer;
}

#desktop-filter h3 {
    margin-bottom: 20px;
}

#desktop-filter a small
{
    font-size: 0.9rem;
    font-style: normal;
    color: $ru_green;
}

@media #{$medium-only}
{
    #desktop-filter a small
    {
        font-size: 0.7rem;
    }
}
    
// Mobile

@media #{$small-only}
{
    #hexfilter, #difficulty, #conceptfilter
    {
        padding-top: 2px;
        padding-left: 15px;
        padding-right: 15px;
    }
}

#buttons
{
    text-align: center;
}

#buttons>li
{
    padding-top: 75px;
    padding-bottom: 10px;
    background-position: 50% 25px;
    background-repeat: no-repeat;
    small
    {
        font-size: 10px;
        font-weight: 600;
    }
    p
    {
        margin-bottom: 10px;
    }
}

.bottom-grey
{
    background-color: white;
    border-bottom: 1px solid $ru_lightgrey;
}

#button-hex
{
    background-image: url(/assets/isaac-mobile-your-challenge-off.png);
    &.active
    {
        background-image: url(/assets/isaac-mobile-your-challenge-on.png); 
    }
}

#button-difficulty
{
    background-image: url(/assets/isaac-mobile-your-difficulty-off.png);
    &.active
    {
        background-image: url(/assets/isaac-mobile-your-difficulty-on.png); 
    }
}

#button-concept
{
    background-image: url(/assets/isaac-mobile-concept-filter-off.png);
    &.active
    {
        background-image: url(/assets/isaac-mobile-concept-filter-on.png); 
    }
}

.mobile-filter>div
{
    overflow: hidden;
    max-height: 0px;
    transition: 0.6s;
}

#mobile-filter1.down
{
    max-height: 720px;
    transition: 0.6s;
}

#mobile-filter2.down
{
    max-height: 220px;
    transition: 0.6s;
}

#mobile-filter3.down
{
    max-height: 270px;
    transition: 0.6s;
}

#mobile-filter1.isdown
{
    max-height: 1000px;
    transition: 0.6s;
}

#mobile-filter2.isdown
{
    max-height: 1000px;
    transition: 0.6s;
}

#mobile-filter3.isdown
{
    max-height: 1000px;
    transition: 0.6s;
}

#mobile-dd-pad
{
    height: 0px;
    transition: 0.6s;
    &.active
    {
        height: 20px;
        transition: 0.6s;
    }
}

#mobile-filter2
{
    text-align: center;
}

#desktop-filter
{
    overflow: hidden;
    max-height: 0px;
    transition: 0.6s;
    &.down
    {
        max-height: 470px;
        transition: 0.6s;
    }
    &.isdown
    {
        max-height: 1000px;
        transition: 0.6s;
    }
}

@media #{$medium-only}
{
    #desktop-filter
    {
        &.down
        {
            max-height: 750px;
        }
    }
}

#desktop-reveal
{
    display: block;
    height: 34px;
    width: 40px;
    left: 48%;
    bottom: -32px;
    position: absolute;
    background-image: url(/assets/reveal-up.png); 
    background-position: 50% top;
    background-repeat: no-repeat;
    cursor: pointer;
    z-index: 10;
    &.down
    {
        background-image: url(/assets/reveal-down.png); 
    }
}

#mobile-hide
{
    display: block;
    height: 34px;
    width: 40px;
    left: 48%;
    bottom: -32px;
    position: absolute;
    background: transparent;
    background-image: none;
    cursor: pointer;
}

#mobile-base.bottom-grey #mobile-hide
{
    background-image: url(/assets/reveal-down.png); 
    background-position: 50% top;
    background-repeat: no-repeat;
}